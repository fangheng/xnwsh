import org.gradle.internal.os.OperatingSystem

buildscript {
    repositories {
        mavenLocal()
        jcenter()
        maven { url "http://repo.spring.io/plugins-release" }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${spring_boot_version}"
        classpath "org.springframework.build.gradle:propdeps-plugin:0.0.7"
        //jhipster-needle-gradle-buildscript-dependency - JHipster will add additional gradle build script plugins here
    }
}

plugins {
    id "org.sonarqube" version "2.5"
    id "net.ltgt.apt" version "0.11"
    id "io.spring.dependency-management" version "1.0.3.RELEASE"
    id "com.moowork.node" version "1.2.0"
    //jhipster-needle-gradle-plugins - JHipster will add additional gradle plugins here
}

apply plugin: 'java'
sourceCompatibility=1.8
targetCompatibility=1.8
apply plugin: 'maven'
apply plugin: 'org.springframework.boot'
apply plugin: 'war'
apply plugin: 'propdeps'
apply plugin: 'com.moowork.node'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'idea'
apply plugin: 'eclipse'

defaultTasks 'bootRun'

group = 'io.github.jhipster.registry'
version = '3.2.3'
description = ''
bootRepackage {
   mainClass = 'io.github.jhipster.registry.JHipsterRegistryApp'
}

war {

}

springBoot {
    mainClass = 'io.github.jhipster.registry.JHipsterRegistryApp'
    executable = true
    buildInfo()
}

if (OperatingSystem.current().isWindows()) {
    task pathingJar(type: Jar) {
        dependsOn configurations.runtime
        appendix = 'pathing'

        doFirst {
            manifest {
                attributes 'Class-Path': configurations.runtime.files.collect {
                    it.toURL().toString().replaceFirst(/file:\/+/, '/').replaceAll(' ', '%20')
                }.join(' ')
            }
        }
    }

    bootRun {
        addResources = false
        dependsOn pathingJar
        doFirst {
            classpath = files("$buildDir/classes/main", "$buildDir/resources/main", pathingJar.archivePath)
        }
    }
} else {
    bootRun {
        addResources = false
    }
}

test {
    exclude '**/CucumberTest*'

    // uncomment if the tests reports are not generated
    // see https://github.com/jhipster/generator-jhipster/pull/2771 and https://github.com/jhipster/generator-jhipster/pull/4484
    // ignoreFailures true
    reports.html.enabled = false
}

task testReport(type: TestReport) {
    destinationDir = file("$buildDir/reports/tests")
    reportOn test
}


apply from: 'gradle/docker.gradle'
apply from: 'gradle/sonar.gradle'
apply from: 'gradle/liquibase.gradle'
apply from: 'gradle/mapstruct.gradle'
//jhipster-needle-gradle-apply-from - JHipster will add additional gradle scripts to be applied here

if (project.hasProperty('prod')) {
    apply from: 'gradle/profile_prod.gradle'
} else {
    apply from: 'gradle/profile_dev.gradle'
}

if (project.hasProperty('graphite')) {
    apply from: 'gradle/graphite.gradle'
}

if (project.hasProperty('prometheus')) {
    apply from: 'gradle/prometheus.gradle'
}

configurations {
    providedRuntime
    compile.exclude module: "spring-boot-starter-tomcat"
}

repositories {
    mavenLocal()
    jcenter()
}
dependencies {
    compile group: 'io.github.jhipster', name: 'jhipster', version:'1.1.13'
    compile group: 'io.dropwizard.metrics', name: 'metrics-core', version:'3.2.2'
    compile group: 'io.dropwizard.metrics', name: 'metrics-annotation', version:'3.2.2'
    compile group: 'io.dropwizard.metrics', name: 'metrics-json', version:'3.2.2'
    compile group: 'io.dropwizard.metrics', name: 'metrics-jvm', version:'3.2.2'
    compile group: 'io.dropwizard.metrics', name: 'metrics-servlet', version:'3.2.2'
    compile group: 'io.dropwizard.metrics', name: 'metrics-servlets', version:'3.2.2'
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-hppc', version:'2.8.10'
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version:'2.8.10'
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-json-org', version:'2.8.10'
    compile group: 'com.ryantenney.metrics', name: 'metrics-spring', version:'3.1.3'
    compile group: 'commons-codec', name: 'commons-codec', version:'1.10'
    compile group: 'commons-io', name: 'commons-io', version:'2.5'
    compile group: 'org.apache.commons', name: 'commons-lang3', version:'3.5'
    compile group: 'net.jpountz.lz4', name: 'lz4', version:'1.3.0'
    compile group: 'org.mapstruct', name: 'mapstruct-jdk8', version:'1.1.0.Final'
    compile group: 'org.springframework', name: 'spring-context-support', version:'4.3.11.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-actuator', version:'1.5.13.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-autoconfigure', version:'1.5.13.RELEASE'
    compile(group: 'org.springframework.boot', name: 'spring-boot-configuration-processor', version:'1.5.13.RELEASE') {
exclude(module: 'android-json')
    }
    compile group: 'org.springframework.boot', name: 'spring-boot-loader-tools', version:'1.5.13.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-aop', version:'1.5.13.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-logging', version:'1.5.13.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-mail', version:'1.5.13.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-security', version:'1.5.13.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-thymeleaf', version:'1.5.13.RELEASE'
    compile(group: 'org.springframework.boot', name: 'spring-boot-starter-web', version:'1.5.13.RELEASE') {
exclude(module: 'spring-boot-starter-tomcat')
    }
    compile group: 'io.jsonwebtoken', name: 'jjwt', version:'0.7.0'
    compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-zuul', version:'1.3.5.RELEASE'
    compile group: 'org.springframework.cloud', name: 'spring-cloud-starter', version:'1.2.4.RELEASE'
    compile(group: 'org.springframework.cloud', name: 'spring-cloud-starter-ribbon', version:'1.3.5.RELEASE') {
exclude(module: 'netty-transport-native-epoll')
    }
    compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-hystrix', version:'1.3.5.RELEASE'
    compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-spectator', version:'1.3.5.RELEASE'
    compile group: 'org.springframework.retry', name: 'spring-retry', version:'1.2.1.RELEASE'
    compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-eureka-server', version:'1.3.5.RELEASE'
    compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-config', version:'1.3.3.RELEASE'
    compile group: 'org.springframework.cloud', name: 'spring-cloud-config-server', version:'1.3.3.RELEASE'
    compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-feign', version:'1.3.5.RELEASE'
    compile(group: 'net.logstash.logback', name: 'logstash-logback-encoder', version:'4.11') {
exclude(module: 'logback-core')
exclude(module: 'logback-classic')
exclude(module: 'logback-access')
    }
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-cloud-connectors', version:'1.5.13.RELEASE'
    compile group: 'org.springframework.security.oauth', name: 'spring-security-oauth2', version:'2.0.14.RELEASE'
    compile group: 'org.springframework.security', name: 'spring-security-jwt', version:'1.0.8.RELEASE'
    compile group: 'org.springframework.security', name: 'spring-security-data', version:'4.2.3.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-undertow', version:'1.5.13.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-devtools', version:'1.5.13.RELEASE'
    testCompile group: 'com.h2database', name: 'h2', version:'1.4.196'
    testCompile group: 'org.awaitility', name: 'awaitility', version:'2.0.0'
    testCompile group: 'com.jayway.jsonpath', name: 'json-path', version:'2.2.0'
    testCompile group: 'org.assertj', name: 'assertj-core', version:'3.6.2'
    testCompile(group: 'org.springframework.boot', name: 'spring-boot-starter-test', version:'1.5.13.RELEASE') {
exclude(module: 'android-json')
exclude(module: 'commons-logging')
    }
    testCompile group: 'org.springframework.security', name: 'spring-security-test', version:'4.2.3.RELEASE'
    testCompile group: 'org.springframework.boot', name: 'spring-boot-test', version:'1.5.13.RELEASE'
}

task cleanResources(type: Delete) {
    delete 'build/resources'
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.2.1'
}

task stage(dependsOn: 'bootRepackage') {
}

if (project.hasProperty('nodeInstall')) {
    node {
        version = "${node_version}"
        npmVersion = "${npm_version}"
        yarnVersion = "${yarn_version}"
        download = true
    }
}

compileJava.dependsOn processResources
processResources.dependsOn cleanResources,bootBuildInfo
bootBuildInfo.mustRunAfter cleanResources
